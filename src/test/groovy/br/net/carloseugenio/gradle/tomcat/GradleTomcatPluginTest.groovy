/*
 * This Groovy source file was generated by the Gradle 'init' task.
 */
package br.net.carloseugenio.gradle.tomcat

import org.gradle.api.Task
import org.gradle.testfixtures.ProjectBuilder
import spock.lang.Specification

/**
 * A simple unit test for the 'br.net.carloseugenio.gradle.tomcat' plugin.
 */
class GradleTomcatPluginTest extends Specification {

    def "invalid plugin registers task without war plugin"() {
        setup:
        def project = ProjectBuilder.builder().build()

        when:
        def thrown = false
        try {
            project.plugins.apply("br.net.carloseugenio.gradle.tomcat")
        } catch (IllegalStateException) {
            // Ok.
            thrown = true
        }

        then:
            thrown

    }

    def "plugin registers task"() {
        given:
        def project = ProjectBuilder.builder().build()
        project.pluginManager.apply("war")

        when:
        project.plugins.apply("br.net.carloseugenio.gradle.tomcat")

        then:
        project.tasks.findByName("deploy") != null
    }

    def "test extension is applied"() {
        given:
        def project = ProjectBuilder.builder().build()
        project.pluginManager.apply("war")

        when:
        project.plugins.apply("br.net.carloseugenio.gradle.tomcat")

        then:
        project.extensions.findByType(TomcatExtension) != null
    }

    def "test prepare deploy task is executed before deploy task"() {
        given:
        def project = ProjectBuilder.builder().build()
        project.pluginManager.apply("war")
        project.plugins.apply("br.net.carloseugenio.gradle.tomcat")

        when:
        Task deploy = project.tasks.findByName("deploy")

        then:
        deploy.getDependsOn().find { it == "prepareDeploy" } != null

    }

}
